# Source: https://github.com/gwisp2/klipper-drawbot
# Derived from the Drawbot project, removed servo command and stuff.

# CNC MCU CONFIGURATION ####

[mcu]
# You may need to change this.
# serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0043_85334343738351B00140-if00
# Has to be the same as in firmware
baud: 250000

[virtual_sdcard]
path: ~/gcode_files

[printer]
kinematics: cartesian
# Current values are quite slow, you may try to find values that are the best for your drawbot
# Units: mm/s and mm/s^2
max_velocity: 10
max_accel: 300

# CNC STEPPER CONFIGURATION ####

[stepper_x]
step_pin: PD2
dir_pin: PD5
# Might require [duplicate_pin_override]
enable_pin: !PB0
microsteps: 16
rotation_distance: 40
# endstop_pin is required even if you don't use endstops.
# Add ! after ^ if your use NO endstops instead of NC.
endstop_pin: ^!PB1
position_endstop: 0
position_max: 360
homing_speed: 50

[stepper_y]
step_pin: PD3
dir_pin: PD6
enable_pin: !PB0
microsteps: 16
rotation_distance: 40
# endstop_pin is required even if you don't use endstops.
# Add ! after ^ if your use NO endstops instead of NC.
endstop_pin: ^!PB2
# No need to set home direction manually: Klipper understands correct direction by seeing that position_endstop = position_max
position_endstop: 220
position_max: 220
homing_speed: 50

[stepper_z]
step_pin: PD4
dir_pin: PD7
enable_pin: !PB0
microsteps: 16
rotation_distance: 2
endstop_pin: ^!PB3
position_endstop: 0
position_max: 200
homing_speed: 50

# Additional stepper motors and extruders
# https://www.klipper3d.org/Config_Reference.html?h=mcu#additional-stepper-motors-and-extruders
# Configure "A" axis of the CNC shield
[stepper_y1]
step_pin: PB4
dir_pin: !PB5
enable_pin: !PB0
microsteps: 16
rotation_distance: 40
# Migth be able to use an AX pin: https://electronics.stackexchange.com/a/67104
# Trying with A3 (PC3).
endstop_pin: ^!PC3
# position_endstop: 0  # // Option 'position_endstop' is not valid in section 'stepper_y1'
# position_max: 200  # // Option 'position_max' is not valid in section 'stepper_y1'
# homing_speed: 50  # // Option 'homing_speed' is not valid in section 'stepper_y1'


# G2 G3 ####
# Add support for G2 and G3 commands
[gcode_arcs]
resolution: 1.0

[display_status]

[pause_resume]

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.
# Example:
# FORCE_MOVE STEPPER=stepper_x DISTANCE=-10 VELOCITY=1

# PIPETTE MCU CONFIGURATION ####

[mcu tools]
# https://www.klipper3d.org/Config_Reference.html?h=mcu#mcu-my_extra_mcu
# Additional micro-controllers (one may define any number of sections with an "mcu" prefix).
# Additional micro-controllers introduce additional pins that may be configured as heaters, steppers, fans, etc.. 
# For example, if an "[mcu extra_mcu]" section is introduced, then pins such as "extra_mcu:ar9" may then be 
# used elsewhere in the config (where "ar9" is a hardware pin name or alias name on the given mcu).
# You may need to change this.
# serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0043_85334343738351B00140-if00
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# Has to be the same as in firmware
baud: 250000


# PIPETTE EXTRUDER CONFIGURATION ####
# 
# See pin naming examples here: https://github.com/Klipper3d/klipper/blob/master/config/sample-multi-mcu.cfg
# Also: https://www.klipper3d.org/Config_Reference.html?h=mcu#mcu-my_extra_mcu
# Sharing "enable_pin" might require "[duplicate_pin_override]"

[extruder_stepper p20]
extruder: ""
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: tools:PD2
dir_pin: tools:PD5
enable_pin: !tools:PB0
microsteps: 16
rotation_distance: 2
#   See the "stepper" section for the definition of the above
#   parameters.

[extruder_stepper p200]
extruder: ""
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: tools:PD3
dir_pin: tools:PD6
enable_pin: !tools:PB0
microsteps: 16
rotation_distance: 2
#   See the "stepper" section for the definition of the above
#   parameters.

[extruder]
# step_pin:
# dir_pin:
# enable_pin:
# microsteps:
# rotation_distance:
#full_steps_per_rotation:
#gear_ratio:
#   See the "stepper" section for a description of the above
#   parameters. If none of the above parameters are specified then no
#   stepper will be associated with the nozzle hotend (though a
#   SYNC_EXTRUDER_MOTION command may associate one at run-time).
nozzle_diameter: 1
#   Diameter of the nozzle orifice (in mm). This parameter must be
#   provided.
filament_diameter: 1
#   The nominal diameter of the raw filament (in mm) as it enters the
#   extruder. This parameter must be provided.
max_extrude_cross_section: 9999
#   Maximum area (in mm^2) of an extrusion cross section (eg,
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2
instantaneous_corner_velocity: 9999
#   The maximum instantaneous velocity change (in mm/s) of the
#   extruder during the junction of two moves. The default is 1mm/s.
max_extrude_only_distance: 9999
#   Maximum length (in mm of raw filament) that a retraction or
#   extrude-only move may have. If a retraction or extrude-only move
#   requests a distance greater than this value it will cause an error
#   to be returned. The default is 50mm.
max_extrude_only_velocity: 20
max_extrude_only_accel: 100
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
# pressure_advance: 0.0
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
#pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).
#
# The remaining variables describe the extruder heater.
# Setting to the CNC shield unused "Hold" pin on A1
heater_pin: tools:PC1
#   PWM output pin controlling the heater. This parameter must be
#   provided.
#max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   heater_pin may be set to. The value 1.0 allows the pin to be set
#   fully enabled for extended periods, while a value of 0.5 would
#   allow the pin to be enabled for no more than half the time. This
#   setting may be used to limit the total power output (over extended
#   periods) to the heater. The default is 1.0.
sensor_type: EPCOS 100K B57560G104F
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F",
#   "ATC Semitec 104GT-2", "ATC Semitec 104NT-4-R025H42G", "Generic
#   3950","Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", and "TDK NTCG104LH104JT1". See the
#   "Temperature sensors" section for other sensors. This parameter
#   must be provided.
# Setting to the CNC shield unused "Resume" pin on A2
sensor_pin: tools:PC2
#   Analog input pin connected to the sensor. This parameter must be
#   provided.
#pullup_resistor: 4700
#   The resistance (in ohms) of the pullup attached to the thermistor.
#   This parameter is only valid when the sensor is a thermistor. The
#   default is 4700 ohms.
#smooth_time: 1.0
#   A time value (in seconds) over which temperature measurements will
#   be smoothed to reduce the impact of measurement noise. The default
#   is 1 seconds.
control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
pid_Kp: 1
pid_Ki: 1
pid_Kd: 1
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#     heater_pwm = (Kp*error + Ki*integral(error) - Kd*derivative(error)) / 255
#   Where "error" is "requested_temperature - measured_temperature"
#   and "heater_pwm" is the requested heating rate with 0.0 being full
#   off and 1.0 being full on. Consider using the PID_CALIBRATE
#   command to obtain these parameters. The pid_Kp, pid_Ki, and pid_Kd
#   parameters must be provided for PID heaters.
#max_delta: 2.0
#   On 'watermark' controlled heaters this is the number of degrees in
#   Celsius above the target temperature before disabling the heater
#   as well as the number of degrees below the target before
#   re-enabling the heater. The default is 2 degrees Celsius.
#pwm_cycle_time: 0.100
#   Time in seconds for each software PWM cycle of the heater. It is
#   not recommended to set this unless there is an electrical
#   requirement to switch the heater faster than 10 times a second.
#   The default is 0.100 seconds.
min_extrude_temp: -273.15
#   The minimum temperature (in Celsius) at which extruder move
#   commands may be issued. The default is 170 Celsius.
min_temp: -273.15
max_temp: 99999999
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.


# MANUAL PIPETTE STEPPER CONFIGURATION ####

# See pin naming examples here: https://github.com/Klipper3d/klipper/blob/master/config/sample-multi-mcu.cfg
# Also: https://www.klipper3d.org/Config_Reference.html?h=mcu#mcu-my_extra_mcu
# Tool steppers are defined here as "manual" steppers, because they have homing, and are easy to configure.
# See: https://www.klipper3d.org/Config_Reference.html?h=mcu#manual_stepper

# # Copied over the definition of [stepper_x],
# # because the MCUs are identical.
# [manual_stepper p20]
# step_pin: tools:PD2
# dir_pin: tools:PD5
# # Might require "[duplicate_pin_override]"
# enable_pin: !tools:PB0
# microsteps: 16
# rotation_distance: 2
# # Limits
# #position_min: 0  # Invalid option
# #position_max: 40  # Invalid option
# # Homing
# endstop_pin: ^!tools:PB3
# position_endstop: 0
# homing_speed: 40
# # speed settings
# velocity: 20
# accel: 100

# # Copied over the definition of [stepper_y],
# # because the MCUs are identical.
# [manual_stepper p200]
# step_pin: tools:PD3
# dir_pin: tools:PD6
# enable_pin: !tools:PB0
# microsteps: 16
# rotation_distance: 2
# # Limits
# #position_min: 0  # Invalid option
# #position_max: 40  # Invalid option
# # Homing
# endstop_pin: ^!tools:PC3
# position_endstop: 0
# homing_speed: 40
# # speed settings
# velocity: 20
# accel: 100
